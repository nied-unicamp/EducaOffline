server:
  port: 8082

host.full.dns.auth.link: http://localhost:8082

app:
  name: Core API
  security:
    client-id: my-trusted-client
    client-secret: n1e@dhlems
  files:
    upload-dir: ./uploads

spring:
  main.allow-bean-definition-overriding: false
  servlet:
    multipart:
      enabled: true # Enable multipart uploads
      file-size-threshold: 2KB # Threshold after which files are written to disk.
      max-file-size: 50MB
      max-request-size: 75MB
  datasource:
    url: jdbc:mysql://db:3306/DATABASE_NAME?useSSL=false
    username: root
    password: DATABASE_PASSWORD
    #   driver-class-name: com.mysql.jdbc.Driver

    # Do not let the db die if idle
    tomcat:
      test-while-idle: true
      validation-query: SELECT 1
  jackson:
    default-property-inclusion: NON_NULL
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
  #         format_sql: true
  #         show_sql: true
  #     generate-ddl: true
  mail:
    # For Google SMTP server, enable 2FA and create an app password
    username: "EMAIL_ADDRESS"
    password: "EMAIL_PASSWORD"
    host: smtp.gmail.com
    port: 587
    properties:
      mail:
        smtp:
          auth: true
          starttls.enable: true

logging:
  level:
    # org:
    #   springframework:
    #     security: DEBUG
    #   hibernate:
    #     sql: DEBUG
    #     type: TRACE

    #########
    springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator: WARN
    org.springframework.jmx: WARN
    org.springframework.security.web.DefaultSecurityFilterChain: WARN
    org.springframework.web.servlet.mvc.method.annotation: WARN
    org.springframework.boot.web.servlet.FilterRegistrationBean: WARN
    org.springframework.web.servlet.handler.SimpleUrlHandlerMapping: WARN
    org.springframework.security.oauth2.provider.endpoint.FrameworkEndpointHandlerMapping: WARN
